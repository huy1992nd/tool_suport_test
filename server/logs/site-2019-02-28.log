[2019-02-28T13:14:53.976] [INFO] warning - task check nop time : 2019-02-28T06:14:53.975Z
[2019-02-28T13:17:15.298] [INFO] warning - task check nop time : 2019-02-28T06:17:15.297Z
[2019-02-28T13:32:46.190] [INFO] warning - task check nop time : 2019-02-28T06:32:46.190Z
[2019-02-28T14:21:17.942] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T07:21:17.941Z Ok
[2019-02-28T14:24:06.693] [INFO] warning - task check nop time : 2019-02-28T07:24:06.692Z
[2019-02-28T14:24:48.965] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T07:24:48.965Z Ok
[2019-02-28T14:29:34.318] [INFO] warning - task check nop time : 2019-02-28T07:29:34.317Z
[2019-02-28T14:30:03.525] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T07:30:03.525Z Ok
[2019-02-28T14:32:33.678] [INFO] warning - task check nop time : 2019-02-28T07:32:33.678Z
[2019-02-28T14:33:28.020] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T07:33:28.020Z Ok
[2019-02-28T14:37:52.671] [INFO] warning - task check nop time : 2019-02-28T07:37:52.670Z
[2019-02-28T14:38:12.657] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T07:38:12.657Z Ok
[2019-02-28T14:45:07.880] [INFO] warning - task check nop time : 2019-02-28T07:45:07.879Z
[2019-02-28T14:45:40.254] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T07:45:40.254Z Ok
[2019-02-28T15:05:56.545] [INFO] warning - task check nop time : 2019-02-28T08:05:56.545Z
[2019-02-28T15:06:18.453] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T08:06:18.453Z Ok
[2019-02-28T15:26:33.349] [INFO] warning - task check nop time : 2019-02-28T08:26:33.348Z
[2019-02-28T15:26:54.482] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T08:26:54.482Z Ok
[2019-02-28T15:28:21.357] [INFO] warning - task check nop time : 2019-02-28T08:28:21.356Z
[2019-02-28T15:28:41.006] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T08:28:41.006Z Ok
[2019-02-28T15:30:03.124] [INFO] warning - task check nop time : 2019-02-28T08:30:03.124Z
[2019-02-28T15:30:23.850] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T08:30:23.850Z Ok
[2019-02-28T15:30:23.852] [INFO] warning - sql transaction: 
DROP PROCEDURE IF EXISTS calculate_nop_v2;
DROP PROCEDURE IF EXISTS generate_sql_where_clause_v2;
DROP PROCEDURE IF EXISTS generate_nop_sql_v2;
DROP PROCEDURE IF EXISTS calculate_markup_v2;
DROP TABLE IF EXISTS tmp_nop_v2;

CREATE TABLE tmp_nop_v2 (
    id BIGINT(20) NOT NULL AUTO_INCREMENT,
    symbol VARCHAR(50),
    customer_buy DOUBLE,
    customer_sell DOUBLE,
    customer_nop DOUBLE,
	cover_buy DOUBLE,
	cover_sell DOUBLE, 
	cover_nop DOUBLE,
	commission DOUBLE,
	markup_lots DOUBLE,
	nop DOUBLE,
	realized DOUBLE,
	unrealized DOUBLE,
	extra_balance DOUBLE,
	balance DOUBLE,
	order_cover_buy_expense DOUBLE,
	order_cover_sell_expense DOUBLE,
	PRIMARY KEY (id)
);

DELIMITER $$
CREATE PROCEDURE generate_sql_where_clause_v2(IN isCover TINYINT, IN symbol VARCHAR(20), IN isB2C TINYINT, IN endTime VARCHAR(30), OUT nopSQLWhere TEXT) DETERMINISTIC
BEGIN
	SET nopSQLWhere = "";
	SET nopSQLWhere = "currency_pair_cd = '";
	SET nopSQLWhere = CONCAT(nopSQLWhere, symbol);
	SET nopSQLWhere = CONCAT(nopSQLWhere, "'");
	IF isB2C <> 0 THEN 
		SET nopSQLWhere = CONCAT(nopSQLWhere, " AND is_cs=0");
	END IF;
	IF endTime <> "" THEN 
		IF isCover <> 0 THEN 
			SET nopSQLWhere = CONCAT(nopSQLWhere, " AND trade_dt<'");
		ELSE
			SET nopSQLWhere = CONCAT(nopSQLWhere, " AND execution_dt<'");
		END IF;
		SET nopSQLWhere = CONCAT(nopSQLWhere, endTime);
		SET nopSQLWhere = CONCAT(nopSQLWhere, "'");
	END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE generate_nop_sql_v2(IN symbol VARCHAR(20), IN isB2C TINYINT, IN endTime VARCHAR(30), OUT nopSQL TEXT) DETERMINISTIC
BEGIN

    DECLARE customerSQLWhere TEXT DEFAULT "";
	DECLARE coverSQLWhere TEXT DEFAULT "";


	CALL generate_sql_where_clause_v2(0, symbol, isB2C, endTime, customerSQLWhere);
	CALL generate_sql_where_clause_v2(1, symbol, isB2C, endTime, coverSQLWhere);


	SET nopSQL = "";
	SET nopSQL = "(SELECT execution_id, currency_pair_cd, IF(side='1', '3', IF(side='3', '1', '0')) as side, filled_quantity, execution_price, execution_dt, "customer" AS type FROM bpex_execution_orders WHERE ";
	SET nopSQL = CONCAT(nopSQL, customerSQLWhere);
	SET nopSQL = CONCAT(nopSQL, ") UNION ALL (SELECT id as execution_id, currency_pair_cd, side, amount as filled_quantity, price as execution_price, trade_dt as execution_dt, "cover" AS type FROM bpex_covers WHERE ");
	SET nopSQL = CONCAT(nopSQL, coverSQLWhere);
	SET nopSQL = CONCAT(nopSQL, ") UNION ALL (SELECT '1970010100000000000' as execution_id, currency_pair_cd, side, filled_quantity, execution_price, '2017-05-01 00.00.00.000' as execution_dt, "customer" AS type FROM bpex_mm_orders WHERE order_id = '1970010100000000000' AND ");
	SET nopSQL = CONCAT(nopSQL, customerSQLWhere);
	SET nopSQL = CONCAT(nopSQL, ") ORDER BY execution_dt, execution_id");
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE calculate_markup_v2(IN symbol VARCHAR(20), IN endTime VARCHAR(30), OUT markupCommission DOUBLE, OUT markupLot DOUBLE) DETERMINISTIC
BEGIN
	DECLARE markupSQL TEXT DEFAULT "";
	DECLARE customerSQLWhere TEXT DEFAULT "";
	CALL generate_sql_where_clause_v2(0, symbol, 1, endTime, customerSQLWhere);
	SET markupSQL = "SELECT IFNULL(SUM(filled_quantity * markup), 0) AS commission, IFNULL(SUM(filled_quantity), 0) AS lots INTO @markupCommission, @markupLot FROM bpex_execution_orders WHERE ";
	SET markupSQL = CONCAT(markupSQL, customerSQLWhere);
	
	SET @markupSQLTmp = markupSQL;
	PREPARE stmt FROM @markupSQLTmp; 
	EXECUTE stmt; 
	DEALLOCATE PREPARE stmt;
    
    SET markupCommission = @markupCommission;
    SET markupLot = @markupLot;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE calculate_nop_v2(IN symbol VARCHAR(20), IN isB2C TINYINT, IN endTime VARCHAR(30), IN isNewNOP TINYINT, IN fairvalue DOUBLE) DETERMINISTIC
BEGIN

	DECLARE EPSILON DOUBLE DEFAULT 1E-09;
	
	DECLARE executionId VARCHAR(30) DEFAULT "";
	DECLARE currentPairCd VARCHAR(20) DEFAULT "";
	DECLARE vSide VARCHAR(1) DEFAULT "";
	DECLARE filledQuantity DOUBLE DEFAULT 0;
	DECLARE executionPrice DOUBLE DEFAULT 0;
	DECLARE executionDt VARCHAR(30) DEFAULT "";
	DECLARE exeType VARCHAR(20) DEFAULT "";
	
	DECLARE customerBuyNOP DOUBLE DEFAULT 0;
	DECLARE customerSellNOP DOUBLE DEFAULT 0;
	DECLARE coverBuyNOP DOUBLE DEFAULT 0;
	DECLARE coverSellNOP DOUBLE DEFAULT 0;
	DECLARE coverNOP DOUBLE DEFAULT 0;
	DECLARE customerNOP DOUBLE DEFAULT 0;
	DECLARE NOP DOUBLE DEFAULT 0;
	DECLARE extraBalance DOUBLE DEFAULT 0;
	
	DECLARE totalBuy DOUBLE DEFAULT 0;
	DECLARE totalbuyMax DOUBLE DEFAULT 0;
	DECLARE totalBuyAmount DOUBLE DEFAULT 0;
	DECLARE totalBuyAmountMax DOUBLE DEFAULT 0;
	DECLARE totalSell DOUBLE DEFAULT 0;
	DECLARE totalSellMax DOUBLE DEFAULT 0;
	DECLARE totalSellAmount DOUBLE DEFAULT 0;
	DECLARE totalSellAmountMax DOUBLE DEFAULT 0;
	DECLARE totalBuyAmountR DOUBLE DEFAULT 0;
	DECLARE totalSellAmountR DOUBLE DEFAULT 0;
	DECLARE realized DOUBLE DEFAULT 0;
	DECLARE unrealized DOUBLE DEFAULT 0;
	
    DECLARE nopSQL TEXT DEFAULT "";
	DECLARE isFinished INTEGER DEFAULT 0;
	DEClARE cursorNOP CURSOR FOR SELECT execution_id, currency_pair_cd, side, filled_quantity, execution_price, execution_dt, type FROM view_nop ORDER BY execution_dt,execution_id;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET isFinished = 1;

	CALL generate_nop_sql_v2(symbol, isB2C, endTime, nopSQL);
	SET @nopSQL = CONCAT("CREATE VIEW view_nop AS ", nopSQL);
	
	DROP VIEW IF EXISTS view_nop;
	PREPARE stmt FROM @nopSQL;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;

	OPEN cursorNOP;
	get_execution: LOOP
		FETCH cursorNOP INTO executionId, currentPairCd, vSide, filledQuantity, executionPrice, executionDt, exeType;
		IF isFinished = 1 THEN 
			LEAVE get_execution;
		END IF;

		IF exeType = "cover" THEN
			IF vSide = '1' THEN
				SET coverSellNOP = coverSellNOP + filledQuantity;
			ELSE
				SET coverBuyNOP = coverBuyNOP + filledQuantity;
			END IF;
		ELSE
			IF vSide = '1' THEN
				SET customerSellNOP = customerSellNOP + filledQuantity;
			ELSE
				SET customerBuyNOP = customerBuyNOP + filledQuantity;
			END IF;
		END IF;
		
		IF vSide = '1' THEN
			SET totalSell = totalSell + filledQuantity;
			SET totalSellAmount = totalSellAmount + filledQuantity*executionPrice;
		ELSE
			SET totalBuy = totalBuy + filledQuantity;
			SET totalBuyAmount = totalBuyAmount + filledQuantity*executionPrice;
		END IF;
	END LOOP get_execution;
	CLOSE cursorNOP;
	SET totalbuyMax = totalBuy;
	SET totalBuyAmountMax = totalBuyAmount;
	SET totalSellMax = totalSell;
	SET totalSellAmountMax = totalSellAmount;
	
	SET totalSell = 0;
	SET totalSellAmount = 0;
	SET totalBuy = 0;
	SET totalBuyAmount = 0;
	SET totalBuyAmountR = 0;
	SET totalSellAmountR = 0;
	SET isFinished = 0;
	OPEN cursorNOP;
	get_execution: LOOP
		FETCH cursorNOP INTO executionId, currentPairCd, vSide, filledQuantity, executionPrice, executionDt, exeType;
		IF isFinished = 1 THEN 
			LEAVE get_execution;
		END IF;

		IF vSide = '1' THEN
			SET totalSell = totalSell + filledQuantity;
			SET totalSellAmount = totalSellAmount + filledQuantity*executionPrice;
		ELSE
			SET totalBuy = totalBuy + filledQuantity;
			SET totalBuyAmount = totalBuyAmount + filledQuantity*executionPrice;
		END IF;
		
		IF totalBuy>=totalSellMax THEN
			SET totalBuyAmountR = totalBuyAmount - (totalBuy-totalSellMax)*executionPrice;
		END IF;
		IF totalSell>=totalBuyMax THEN
			SET totalSellAmountR = totalSellAmount - (totalSell-totalBuyMax)*executionPrice;
		END IF;
		IF ABS(totalBuyAmountR)>EPSILON OR ABS(totalSellAmountR)>EPSILON THEN
			LEAVE get_execution;
		END IF;
	END LOOP get_execution;
	CLOSE cursorNOP;
	
	SET customerSellNOP = IF(customerSellNOP>0, -customerSellNOP, 0);
	SET customerNOP = customerBuyNOP + customerSellNOP;
	SET coverSellNOP = IF(coverSellNOP>0, -coverSellNOP, 0);
	SET coverNOP = coverBuyNOP + coverSellNOP;
	SET NOP = customerNOP + coverNOP;
	
	CALL calculate_markup_v2(symbol, endTime, @markupCommission, @markupLots);
	
	IF ABS(totalBuyAmountR)>EPSILON THEN
		SET realized = totalSellAmountMax - totalBuyAmountR;
	ELSEIF ABS(totalSellAmountR)>EPSILON THEN
		SET realized = totalSellAmountR - totalBuyAmountMax;
	END IF;
	SET unrealized = totalSellAmountMax - totalBuyAmountMax - realized + NOP*fairvalue;
	
	SET extraBalance = (totalSellAmountMax - totalBuyAmountMax);
    
	IF isNewNOP<>0 THEN
		INSERT INTO tmp_nop_v2 (
			symbol, customer_buy, customer_sell, customer_nop, cover_buy, 
			cover_sell, cover_nop, commission, markup_lots, nop,
			realized, unrealized, extra_balance, balance,
			order_cover_buy_expense, order_cover_sell_expense
		) SELECT
			symbol AS symbol, customerBuyNOP AS customer_buy, customerSellNOP AS customer_sell, customerNOP AS customer_nop, coverBuyNOP AS cover_buy,
			coverSellNOP AS cover_sell, coverNOP AS cover_nop, @markupCommission AS commission, @markupLots AS markup_lots, NOP AS nop,
			(realized-@markupCommission) AS realized, unrealized AS unrealized, extraBalance AS extra_balance, extraBalance + (unrealized+realized-@markupCommission) AS balance,
			totalBuyAmountMax AS order_cover_buy_expense, totalSellAmountMax AS order_cover_sell_expense;
	ELSE
		INSERT INTO tmp_nop_v2 (
			symbol, customer_buy, customer_sell, customer_nop, cover_buy, 
			cover_sell, cover_nop, commission, markup_lots, nop,
			realized, unrealized, extra_balance, balance,
			order_cover_buy_expense, order_cover_sell_expense
		) SELECT
			symbol AS symbol, customerBuyNOP AS customer_buy, customerSellNOP AS customer_sell, customerNOP AS customer_nop, coverBuyNOP AS cover_buy,
			coverSellNOP AS cover_sell, coverNOP AS cover_nop, @markupCommission AS commission, @markupLots AS markup_lots, NOP AS nop,
			(realized-@markupCommission) AS realized, unrealized AS unrealized, 0 AS extra_balance, (unrealized+realized-@markupCommission) AS balance,
			totalBuyAmountMax AS order_cover_buy_expense, totalSellAmountMax AS order_cover_sell_expense;
	END IF;
	
	SELECT * FROM tmp_nop_v2 WHERE id=LAST_INSERT_ID();
END$$
DELIMITER 
        
[2019-02-28T15:32:05.589] [INFO] warning - task check nop time : 2019-02-28T08:32:05.588Z
[2019-02-28T15:32:25.803] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T08:32:25.803Z Ok
[2019-02-28T15:35:01.485] [INFO] warning - task check nop time : 2019-02-28T08:35:01.485Z
[2019-02-28T15:35:21.470] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T08:35:21.469Z Ok
[2019-02-28T15:38:54.093] [INFO] warning - task check nop time : 2019-02-28T08:38:54.093Z
[2019-02-28T15:39:19.338] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T08:39:19.338Z Ok
[2019-02-28T15:56:17.942] [INFO] warning - task check nop time : 2019-02-28T08:56:17.942Z
[2019-02-28T15:56:39.326] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T08:56:39.326Z Ok
[2019-02-28T16:18:09.819] [INFO] warning - task check nop time : 2019-02-28T09:18:09.818Z
[2019-02-28T16:18:30.091] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T09:18:30.091Z Ok
[2019-02-28T16:20:14.883] [INFO] warning - task check nop time : 2019-02-28T09:20:14.883Z
[2019-02-28T16:20:36.209] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T09:20:36.209Z Ok
[2019-02-28T16:23:33.236] [INFO] warning - task check nop time : 2019-02-28T09:23:33.236Z
[2019-02-28T16:23:53.613] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T09:23:53.613Z Ok
[2019-02-28T16:26:00.045] [INFO] warning - task check nop time : 2019-02-28T09:26:00.044Z
[2019-02-28T16:26:20.686] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T09:26:20.686Z Ok
[2019-02-28T16:26:55.508] [INFO] warning - task check nop time : 2019-02-28T09:26:55.508Z
[2019-02-28T16:27:15.721] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T09:27:15.721Z Ok
[2019-02-28T16:27:38.283] [INFO] warning - task check nop time : 2019-02-28T09:27:38.283Z
[2019-02-28T16:27:57.962] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T09:27:57.962Z Ok
[2019-02-28T16:29:32.829] [INFO] warning - task check nop time : 2019-02-28T09:29:32.829Z
[2019-02-28T16:30:13.490] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T09:30:13.490Z Ok
[2019-02-28T16:37:42.239] [INFO] warning - task check nop time : 2019-02-28T09:37:42.239Z
[2019-02-28T16:38:02.028] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T09:38:02.028Z Ok
[2019-02-28T16:45:21.568] [INFO] warning - task check nop time : 2019-02-28T09:45:21.568Z
[2019-02-28T16:45:41.196] [INFO] warning - task_export_data_screen_nop  time : 2019-02-28T09:45:41.196Z Ok
